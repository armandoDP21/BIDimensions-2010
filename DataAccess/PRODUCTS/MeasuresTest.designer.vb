'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Financial_Interfaces")>  _
Partial Public Class MeasuresTestDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.My.MySettings.Default.Financial_InterfacesConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property M01_Brands() As System.Data.Linq.Table(Of M01_Brand)
		Get
			Return Me.GetTable(Of M01_Brand)
		End Get
	End Property
	
	Public ReadOnly Property M01_Categories() As System.Data.Linq.Table(Of M01_Category)
		Get
			Return Me.GetTable(Of M01_Category)
		End Get
	End Property
	
	Public ReadOnly Property M01_Flavors() As System.Data.Linq.Table(Of M01_Flavor)
		Get
			Return Me.GetTable(Of M01_Flavor)
		End Get
	End Property
	
	Public ReadOnly Property M01_POT_Status() As System.Data.Linq.Table(Of M01_POT_Status)
		Get
			Return Me.GetTable(Of M01_POT_Status)
		End Get
	End Property
	
	Public ReadOnly Property M01_Presentations() As System.Data.Linq.Table(Of M01_Presentation)
		Get
			Return Me.GetTable(Of M01_Presentation)
		End Get
	End Property
	
	Public ReadOnly Property M01_ProductGroups() As System.Data.Linq.Table(Of M01_ProductGroup)
		Get
			Return Me.GetTable(Of M01_ProductGroup)
		End Get
	End Property
	
	Public ReadOnly Property M01_Sizes() As System.Data.Linq.Table(Of M01_Size)
		Get
			Return Me.GetTable(Of M01_Size)
		End Get
	End Property
	
	Public ReadOnly Property M01_Sources() As System.Data.Linq.Table(Of M01_Source)
		Get
			Return Me.GetTable(Of M01_Source)
		End Get
	End Property
	
	Public ReadOnly Property M01_SubBrands() As System.Data.Linq.Table(Of M01_SubBrand)
		Get
			Return Me.GetTable(Of M01_SubBrand)
		End Get
	End Property
	
	Public ReadOnly Property M01_SubCategories() As System.Data.Linq.Table(Of M01_SubCategory)
		Get
			Return Me.GetTable(Of M01_SubCategory)
		End Get
	End Property
	
	Public ReadOnly Property M01_TypeBrands() As System.Data.Linq.Table(Of M01_TypeBrand)
		Get
			Return Me.GetTable(Of M01_TypeBrand)
		End Get
	End Property
	
	Public ReadOnly Property M01_TypeOFSales() As System.Data.Linq.Table(Of M01_TypeOFSale)
		Get
			Return Me.GetTable(Of M01_TypeOFSale)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Brand")>  _
Partial Public Class M01_Brand
	
	Private _BrandID As Integer
	
	Private _BrandName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrandID", DbType:="Int NOT NULL")>  _
	Public Property BrandID() As Integer
		Get
			Return Me._BrandID
		End Get
		Set
			If ((Me._BrandID = value)  _
						= false) Then
				Me._BrandID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrandName", DbType:="VarChar(50)")>  _
	Public Property BrandName() As String
		Get
			Return Me._BrandName
		End Get
		Set
			If (String.Equals(Me._BrandName, value) = false) Then
				Me._BrandName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Category")>  _
Partial Public Class M01_Category
	
	Private _CategoryID As Integer
	
	Private _CategoryName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="VarChar(50)")>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Flavor")>  _
Partial Public Class M01_Flavor
	
	Private _FlavorID As Integer
	
	Private _FlavorName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FlavorID", DbType:="Int NOT NULL")>  _
	Public Property FlavorID() As Integer
		Get
			Return Me._FlavorID
		End Get
		Set
			If ((Me._FlavorID = value)  _
						= false) Then
				Me._FlavorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FlavorName", DbType:="VarChar(50)")>  _
	Public Property FlavorName() As String
		Get
			Return Me._FlavorName
		End Get
		Set
			If (String.Equals(Me._FlavorName, value) = false) Then
				Me._FlavorName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_POT_Status")>  _
Partial Public Class M01_POT_Status
	
	Private _POT_StatusID As Integer
	
	Private _POT_StatusName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POT_StatusID", DbType:="Int NOT NULL")>  _
	Public Property POT_StatusID() As Integer
		Get
			Return Me._POT_StatusID
		End Get
		Set
			If ((Me._POT_StatusID = value)  _
						= false) Then
				Me._POT_StatusID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POT_StatusName", DbType:="NVarChar(50)")>  _
	Public Property POT_StatusName() As String
		Get
			Return Me._POT_StatusName
		End Get
		Set
			If (String.Equals(Me._POT_StatusName, value) = false) Then
				Me._POT_StatusName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Presentation")>  _
Partial Public Class M01_Presentation
	
	Private _PresentationID As Integer
	
	Private _PresentationName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PresentationID", DbType:="Int NOT NULL")>  _
	Public Property PresentationID() As Integer
		Get
			Return Me._PresentationID
		End Get
		Set
			If ((Me._PresentationID = value)  _
						= false) Then
				Me._PresentationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PresentationName", DbType:="VarChar(50)")>  _
	Public Property PresentationName() As String
		Get
			Return Me._PresentationName
		End Get
		Set
			If (String.Equals(Me._PresentationName, value) = false) Then
				Me._PresentationName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_ProductGroup")>  _
Partial Public Class M01_ProductGroup
	
	Private _GroupID As Integer
	
	Private _GroupName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupName", DbType:="VarChar(50)")>  _
	Public Property GroupName() As String
		Get
			Return Me._GroupName
		End Get
		Set
			If (String.Equals(Me._GroupName, value) = false) Then
				Me._GroupName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Size")>  _
Partial Public Class M01_Size
	
	Private _SizeID As Integer
	
	Private _SizeName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SizeID", DbType:="Int NOT NULL")>  _
	Public Property SizeID() As Integer
		Get
			Return Me._SizeID
		End Get
		Set
			If ((Me._SizeID = value)  _
						= false) Then
				Me._SizeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SizeName", DbType:="VarChar(50)")>  _
	Public Property SizeName() As String
		Get
			Return Me._SizeName
		End Get
		Set
			If (String.Equals(Me._SizeName, value) = false) Then
				Me._SizeName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_Source")>  _
Partial Public Class M01_Source
	
	Private _SourceID As Integer
	
	Private _SourceName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceID", DbType:="Int NOT NULL")>  _
	Public Property SourceID() As Integer
		Get
			Return Me._SourceID
		End Get
		Set
			If ((Me._SourceID = value)  _
						= false) Then
				Me._SourceID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceName", DbType:="VarChar(50)")>  _
	Public Property SourceName() As String
		Get
			Return Me._SourceName
		End Get
		Set
			If (String.Equals(Me._SourceName, value) = false) Then
				Me._SourceName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_SubBrand")>  _
Partial Public Class M01_SubBrand
	
	Private _SubBrandID As Integer
	
	Private _SubBrandName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubBrandID", DbType:="Int NOT NULL")>  _
	Public Property SubBrandID() As Integer
		Get
			Return Me._SubBrandID
		End Get
		Set
			If ((Me._SubBrandID = value)  _
						= false) Then
				Me._SubBrandID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubBrandName", DbType:="VarChar(50)")>  _
	Public Property SubBrandName() As String
		Get
			Return Me._SubBrandName
		End Get
		Set
			If (String.Equals(Me._SubBrandName, value) = false) Then
				Me._SubBrandName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_SubCategory")>  _
Partial Public Class M01_SubCategory
	
	Private _SubCategoryID As Integer
	
	Private _SubCategoryName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategoryID", DbType:="Int NOT NULL")>  _
	Public Property SubCategoryID() As Integer
		Get
			Return Me._SubCategoryID
		End Get
		Set
			If ((Me._SubCategoryID = value)  _
						= false) Then
				Me._SubCategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategoryName", DbType:="VarChar(50)")>  _
	Public Property SubCategoryName() As String
		Get
			Return Me._SubCategoryName
		End Get
		Set
			If (String.Equals(Me._SubCategoryName, value) = false) Then
				Me._SubCategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_TypeBrand")>  _
Partial Public Class M01_TypeBrand
	
	Private _TypeBrandID As Integer
	
	Private _TypeBrandName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeBrandID", DbType:="Int NOT NULL")>  _
	Public Property TypeBrandID() As Integer
		Get
			Return Me._TypeBrandID
		End Get
		Set
			If ((Me._TypeBrandID = value)  _
						= false) Then
				Me._TypeBrandID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeBrandName", DbType:="VarChar(50)")>  _
	Public Property TypeBrandName() As String
		Get
			Return Me._TypeBrandName
		End Get
		Set
			If (String.Equals(Me._TypeBrandName, value) = false) Then
				Me._TypeBrandName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.M01_TypeOFSales")>  _
Partial Public Class M01_TypeOFSale
	
	Private _TypeSalesID As Integer
	
	Private _TypeSalesName As String
	
	Private _Active_Flag As System.Nullable(Of Boolean)
	
	Private _SystemOnly As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeSalesID", DbType:="Int NOT NULL")>  _
	Public Property TypeSalesID() As Integer
		Get
			Return Me._TypeSalesID
		End Get
		Set
			If ((Me._TypeSalesID = value)  _
						= false) Then
				Me._TypeSalesID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeSalesName", DbType:="VarChar(50)")>  _
	Public Property TypeSalesName() As String
		Get
			Return Me._TypeSalesName
		End Get
		Set
			If (String.Equals(Me._TypeSalesName, value) = false) Then
				Me._TypeSalesName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active_Flag", DbType:="Bit")>  _
	Public Property Active_Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._Active_Flag
		End Get
		Set
			If (Me._Active_Flag.Equals(value) = false) Then
				Me._Active_Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemOnly", DbType:="Bit")>  _
	Public Property SystemOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._SystemOnly
		End Get
		Set
			If (Me._SystemOnly.Equals(value) = false) Then
				Me._SystemOnly = value
			End If
		End Set
	End Property
End Class
